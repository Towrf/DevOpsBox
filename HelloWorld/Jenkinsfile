pipeline {
    agent { label 'master'}
    
    tools {
        maven "apache-maven-3.6.3"
    }
    
    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "192.168.8.2:8081"
        NEXUS_REPOSITORY = "maven-snapshots"
        NEXUS_CREDENTIAL_ID = "jenkins_client"
    }

    stages {
        stage('Build') {
            steps {
	            dir("HelloWorld"){
	            	sh "mvn dependency:go-offline dependency:resolve-plugins"
	            	sh "mvn package -DskipTests=true"    
            }
        }
	}
    
    	stage('Test') {
			steps {
	            dir("HelloWorld"){
					script {
					    def propertiesFilePath = "${env.WORKSPACE}/TestCases.jmx"
						build job: 'JmeterTesting', parameters: 
						[
							[$class: "FileParameterValue", name: "propertiesFile", file: new FileParameterValue.FileItemImpl(new File(propertiesFilePath))
							]
						]
					}
	            }
			}
		}

	
		stage('Publish to Nexus') {
            steps {
            	script {
            	    dir("HelloWorld"){
            	        pom = readMavenPom file: "pom.xml";
            	        echo "target/*.${pom.packaging}";
            	        filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
            	        echo  "File Info: ${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}";
            	        artifactPath = filesByGlob[0].path;
            	        artifactExist =  fileExists artifactPath;
            	        
            	        if(artifactExist){
            	        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
            	            nexusArtifactUploader(
		            			nexusVersion: NEXUS_VERSION,
		            	        protocol: NEXUS_PROTOCOL,
		            	        nexusUrl: NEXUS_URL,
		            	        groupId: pom.groupId,
		            	        version: pom.version,
		            	        repository: NEXUS_REPOSITORY,
		            	        credentialsId: NEXUS_CREDENTIAL_ID,
		            	        artifacts: [ 
		            	        	[
		            	            	artifactId: pom.artifactId,
		            	            	classifier: '',
		            	            	file: artifactPath,
		            	            	type: pom.packaging
		            	            ]
		            	        ]
							)
            	        }
            	        else{
            	            echo "File: ${artifactPath} could not be found";
            	        }



            	        


            	    }

            	}

            }
        }
    }
}